/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package westen;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 *
 * @author santi
 */
public class MultilingualTextMap {
    public static void main(String args[]) throws Exception {
        /*
        Table should look like this:
            ; List of offsets:
            TEXT_USE_BONES: equ 0
            ; ...
        
            en_text_table:
            db BANK, IDX
            ; ...
        
            es_text_table:
            db BANK, IDX
            ; ...
        */

        List<String> tags = new ArrayList<>();
        String textTableAsm = "";
        
        textTableAsm += generateLanguageTextTable("en", "src/autogenerated/text-constants.asm", tags);
        textTableAsm += generateLanguageTextTable("es", "src/autogenerated/text-constants-es.asm", tags);
        
        int i = 0;
        for(String tag:tags) {
            textTableAsm += tag + ": equ " + i + "\n";
            i += 2;
        }
        textTableAsm += "\n";
        
        FileWriter fw = new FileWriter("src/autogenerated/text-multilingual.asm");
        fw.write(textTableAsm);
        fw.flush();
        fw.close();
        
//        System.out.println(textTableAsm);
    }
    
    
    public static String generateLanguageTextTable(String language, String path, List<String> tags) throws Exception
    {
        String asm = "";
        HashMap<String, String> tagValues = new HashMap<>();
        int highestBank = -1;
        int highestIDX = -1;
        
        BufferedReader br = new BufferedReader(new FileReader(path));
        while(true) {
            String line = br.readLine();
            if (line == null) break;
            line = line.strip();
            if (line.contains("_BANK") && line.contains("equ ")) {
                String tag = line.substring(0, line.indexOf("_BANK"));
                int bank = Integer.parseInt(line.substring(line.indexOf("equ ")+4));
                line = br.readLine();
                line = line.strip();
                int idx = Integer.parseInt(line.substring(line.indexOf("equ ")+4));
                
                if (!tags.contains(tag)) tags.add(tag);
                tagValues.put(tag, bank + ", " + idx);
                
                if (bank > highestBank) highestBank = bank;
                if (idx > highestIDX) highestIDX = idx;
            }
        }
        
        System.out.println(language + " highest bank: " + highestBank + ", max bank idx: " + highestIDX);
        
        asm += language + "_text_table:\n";
        for(String tag:tags) {
            String value = tagValues.get(tag);
            asm += "  db " + value + "\n";
        }
        asm += "\n";
        
        return asm;
    }

    public MultilingualTextMap() {
    }
}
